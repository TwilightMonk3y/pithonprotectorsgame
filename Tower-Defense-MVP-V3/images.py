#import resource
import pygame
import objects
import sys
import os
def resource_path(relative_path):
    try:
    # PyInstaller creates a temp folder and stores path in _MEIPASS
        base_path = sys._MEIPASS
    except Exception:
        base_path = os.path.abspath(".")

    return os.path.join(base_path, relative_path)

# Loading map images
giftofNature_url = resource_path("Maps/GiftOfNature.png")
giftOfNature = pygame.image.load(giftofNature_url)
giftOfNature = pygame.transform.scale(giftOfNature, objects.gameRect.size)
craneSite_url = resource_path("Maps/CraneSite.png")
craneSite = pygame.image.load(craneSite_url)
craneSite = pygame.transform.scale(craneSite, objects.gameRect.size)

# Loading menu images
background1_url = resource_path("OtherImages/TitleScreen.png")
background1 = pygame.image.load(background1_url)
background1 = pygame.transform.scale(background1, objects.windowSize)
background2_url = resource_path("OtherImages/background2.jpg")
background2 = pygame.image.load(background2_url) # TODO: temp image
background2 = pygame.transform.scale(background2, objects.windowSize)
background3_url = resource_path("OtherImages/SettingsMenu.png")
background3 = pygame.image.load(background3_url)
background3 = pygame.transform.scale(background3, objects.windowSize)

startButton_url = resource_path("OtherImages/startButton.png")
startButton = pygame.image.load(startButton_url)
startButton = pygame.transform.scale(startButton, (100, 100))
button2_url = resource_path("OtherImages/Information_1.png")
button2 = pygame.image.load(button2_url) # TODO: clean up buttons
button2 = pygame.transform.scale(button2,(100, 100))
button3_url = resource_path("OtherImages/Settings_1.png")
button3 = pygame.image.load(button3_url)
button3 = pygame.transform.scale(button3, (100, 100))
roundButton_url = resource_path("OtherImages/roundButton.png")
roundButton = pygame.image.load(roundButton_url)
roundButton = pygame.transform.scale(roundButton, (100, 100))
startrect = startButton.get_rect()  
startrect = startrect.move(400,120)
start2rect = button2.get_rect()
start2rect = start2rect.move(400, 220)
start3rect = button3.get_rect()
start3rect = start3rect.move(400, 320)
scrollUpButton_url = resource_path("OtherImages/ScrollUpButton.png")
scrollUpButton = pygame.image.load(scrollUpButton_url)
scrollUpButton = pygame.transform.scale(scrollUpButton, (100,100))
scrollDownButton_url = resource_path("OtherImages/ScrollDownButton.png")
scrollDownButton = pygame.image.load(scrollDownButton_url)
scrollDownButton = pygame.transform.scale(scrollDownButton, (100,100))
exitButton_url = resource_path("OtherImages/Exit Button.png")
exitButton = pygame.image.load(exitButton_url)
exitButton = pygame.transform.scale(exitButton, (100,100))
blue_url = resource_path("OtherImages/blue.jpg")
blue = pygame.image.load(blue_url)

settingsButton_url = resource_path("OtherImages/SettingsButton.png")
settingsButton = pygame.image.load(settingsButton_url)
settingsButton = pygame.transform.scale(settingsButton, (100,100))
onButton_url = resource_path("OtherImages/SettingPictures/OnButton.png")
onButton = pygame.image.load(onButton_url)
onButton = pygame.transform.scale(onButton, (250,100))

# Load enemy images
enemySize = 50, 50
ghost_url = resource_path("Enemies/ghost.png")
ghost = pygame.image.load(ghost_url)
ghost = pygame.transform.scale(ghost, enemySize)
skeleton_url = resource_path("Enemies/skeleton.png")
skeleton = pygame.image.load(skeleton_url)
skeleton = pygame.transform.scale(skeleton, enemySize)
silver_skeleton_url = resource_path("Enemies/SilverSkeletonEnemy.png")
silver_skeleton = pygame.image.load(silver_skeleton_url)
silver_skeleton = pygame.transform.scale(silver_skeleton, enemySize)
gold_skeleton_url = resource_path("Enemies/GoldSkeletonEnemy.png")
gold_skeleton = pygame.image.load(gold_skeleton_url)
gold_skeleton = pygame.transform.scale(gold_skeleton, enemySize)
goblin_url = resource_path("Enemies/goblin.png")
goblin = pygame.image.load(goblin_url)
goblin = pygame.transform.scale(goblin, enemySize)

bossSize = 70, 70
giant_url = resource_path("Enemies/GiantEnemy.png")
giant = pygame.image.load(giant_url)
giant = pygame.transform.scale(giant, bossSize)
ghost_giant_url = resource_path("Enemies/GhostKingEnemy.png")
ghost_giant = pygame.image.load(ghost_giant_url)
ghost_giant = pygame.transform.scale(ghost_giant, bossSize)

# Load tower images
towerSize = objects.towerSize
poker_url = resource_path("Towers/PokerTower.png")
poker = pygame.image.load(poker_url)
poker = pygame.transform.scale(poker, towerSize)
sniper_tank_url = resource_path("Towers/SniperTower.png")
sniper_tank = pygame.image.load(sniper_tank_url)
sniper_tank = pygame.transform.scale(sniper_tank, towerSize)
flamethrower_url = resource_path("Towers/FlamethrowerTower.png")
flamethrower = pygame.image.load(flamethrower_url)
flamethrower = pygame.transform.scale(flamethrower, towerSize)
gatling_turret_url = resource_path("Towers/GatlingTurretTower.png")
gatling_turret = pygame.image.load(gatling_turret_url)
gatling_turret = pygame.transform.scale(gatling_turret, towerSize)
cannon_url = resource_path("Towers/CannonTower.png")
cannon = pygame.image.load(cannon_url)
cannon = pygame.transform.scale(cannon, towerSize)
turret_url = resource_path("Towers/TurretTower.png")
turret = pygame.image.load(turret_url)
turret = pygame.transform.scale(turret, towerSize)
generator_url = resource_path("Towers/Generator.png")
generator = pygame.image.load(generator_url)
generator = pygame.transform.scale(generator, towerSize)
electricuter_url = resource_path("Towers/Electricuter.png")
electricuter = pygame.image.load(electricuter_url)
electricuter = pygame.transform.scale(electricuter, towerSize)
shiner_url = resource_path("Towers/ShinerTower.png")
shiner = pygame.image.load(shiner_url)
shiner = pygame.transform.scale(shiner, towerSize)
mage_url = resource_path("Towers/MageTower.png")
mage = pygame.image.load(mage_url)
mage = pygame.transform.scale(mage, towerSize)
hybrid_url = resource_path("Towers/HybridTower.png")
hybrid = pygame.image.load(hybrid_url)
hybrid = pygame.transform.scale(hybrid, towerSize)
destroyer_url = resource_path("Towers/DestroyerTower.png")
destroyer = pygame.image.load(destroyer_url)
destroyer = pygame.transform.scale(destroyer, towerSize)
missile_launcher_url = resource_path("Towers/MissileLauncher.png")
missile_launcher = pygame.image.load(missile_launcher_url)
missile_launcher = pygame.transform.scale(missile_launcher, towerSize)
#loading settings images
auto_start_true_url = resource_path("OtherImages/SettingPictures/Auto Start/True.png")
auto_start_true = pygame.image.load(auto_start_true_url)
auto_start_false_url = resource_path("OtherImages/SettingPictures/Auto Start/False.png")
auto_start_false = pygame.image.load(auto_start_false_url)
difficulty_easy_url = resource_path("OtherImages/SettingPictures/Difficulty/Easy.png")
difficulty_easy = pygame.image.load(difficulty_easy_url)
difficulty_medium_url = resource_path("OtherImages/SettingPictures/Difficulty/Medium.png")
difficulty_medium = pygame.image.load(difficulty_medium_url)
difficulty_hard_url = ("OtherImages/SettingPictures/Difficulty/Hard.png")
difficulty_hard = pygame.image.load(difficulty_hard_url)
speed_fast_url = resource_path("OtherImages/SettingPictures/Speed/Fast.png")
speed_fast = pygame.image.load(speed_fast_url)
speed_slow_url = resource_path("OtherImages/SettingPictures/Speed/Slow.png")
speed_slow = pygame.image.load(speed_slow_url)
math_algebra_url = resource_path("OtherImages/SettingPictures/Type of Math/Algebra.png")
math_algebra = pygame.image.load(math_algebra_url)
math_algebra2_url = resource_path("OtherImages/SettingPictures/Type of Math/Algebra2.png")
math_algebra2 = pygame.image.load(math_algebra2_url)
math_arithmetics_url = resource_path("OtherImages/SettingPictures/Type of Math/Arithmetics.png")
math_arithmetics = pygame.image.load(math_arithmetics_url)
math_geometry_url = resource_path("OtherImages/SettingPictures/Type of Math/Geometry.png")
math_geometry = pygame.image.load(math_geometry_url)